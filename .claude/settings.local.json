{
  "permissions": {
    "allow": [
      "Bash(dir)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(mkdir:*)",
      "Bash(go mod init:*)",
      "Read(//c/**)",
      "Bash(echo:*)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" version)",
      "Bash(export:*)",
      "Bash(go:*)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" mod init context-extender)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build -o context-extender.exe .)",
      "Bash(./context-extender.exe version)",
      "Bash(./context-extender.exe --help)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -cover)",
      "Bash(./context-extender.exe configure --help)",
      "Bash(./context-extender.exe configure --status)",
      "Bash(./context-extender.exe configure)",
      "Bash(./context-extender.exe configure --remove)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test ./internal/hooks -v)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/hooks/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=. ./internal/hooks/)",
      "Bash(dir:*)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/storage/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=. ./internal/storage/)",
      "Bash(./context-extender.exe:*)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./...)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" get github.com/google/uuid)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/session/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=. ./internal/session/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/jsonl/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=. ./internal/jsonl/)",
      "Bash(del \"C:\\Users\\marko\\IdeaProjects\\context-extender\\internal\\storage\\completed.go\")",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v .)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/converter/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=. ./internal/converter/)",
      "Bash(\"C:\\Users\\marko\\IdeaProjects\\context-extender\\context-extender.exe\" capture --event session-start)",
      "Bash(\"C:\\Users\\marko\\IdeaProjects\\context-extender\\context-extender.exe\" capture --event user-prompt --data '{\"\"message\"\":\"\"Testing concurrent session in different directory\"\"}')",
      "Bash(\"C:\\Users\\marko\\IdeaProjects\\context-extender\\context-extender.exe\" capture --event session-end)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" mod tidy)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" get github.com/mattn/go-sqlite3@v1.14.22)",
      "Bash(CGO_ENABLED=1 \"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build -tags sqlite3 -o context-extender-test.exe .)",
      "Bash(del context-extender-test.exe)",
      "Bash(CGO_ENABLED=1 \"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/database/)",
      "Bash(where cl)",
      "Bash(where gcc)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build -tags sqlite3 ./internal/database/)",
      "Bash(CGO_ENABLED=1 \"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build -tags sqlite3 -o context-extender.exe .)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build -o /dev/null ./internal/database/)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(CGO_ENABLED=1 go build -tags sqlite3 -o context-extender-test.exe .)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build -tags sqlite3 -o context-extender-test.exe .)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_purgo_connection.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_simple_purgo.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_connection_pooling.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_direct_connection_pooling.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_simple_connection_manager.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" get golang.org/x/crypto/pbkdf2)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_encryption_performance.go)",
      "Bash(del test_encryption_performance.go)",
      "Bash(del test_encryption.key)",
      "Bash(del test_middleware.key)",
      "Bash(del test_performance.key)",
      "Bash(del test_concurrent.key)",
      "Bash(if exist:*)",
      "Bash(if exist test_encryption.key del test_encryption.key)",
      "Bash(if exist test_middleware.key del test_middleware.key)",
      "Bash(if exist test_performance.key del test_performance.key)",
      "Bash(if exist test_concurrent.key del test_concurrent.key)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_encrypted_database.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_database_encryption_integration.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_encryption_standalone.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run main.go encrypt status)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_cli_integration.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/encryption/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=. ./internal/encryption/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=. -run=^$ ./internal/encryption/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_integration_complete.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_session_demo.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=BenchmarkMonitorRecording ./internal/performance/ -benchtime=2s)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=BenchmarkCacheOperations ./internal/performance/ -benchtime=2s)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=BenchmarkCacheOperations/LRU ./internal/performance/ -benchtime=2s)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=BenchmarkConnectionPool ./internal/performance/ -benchtime=2s)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -bench=BenchmarkMonitor ./internal/performance/ -benchtime=2s)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_performance_demo.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/metrics/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_security_demo.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/auth/ ./internal/ratelimit/ ./internal/audit/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/auth/ ./internal/ratelimit/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/auth/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" get modernc.org/sqlite@v1.39.0)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build ./internal/database/)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_purgo_sqlite.go)",
      "Bash(del test_purgo_sqlite.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" mod why modernc.org/sqlite)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build -o context-extender.exe main.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" run test_cycle3_success.go)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build .)",
      "Bash(\"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" test -v ./internal/database/)",
      "Bash(del /S /Q \"C:\\Users\\marko\\IdeaProjects\\context-extender\\internal\\auth\")",
      "Bash(.context-extender.exe --help)",
      "Bash(\".\\context-extender.exe\" database init)",
      "Bash(CGO_ENABLED=0 \"C:/Users/marko/sdk/go1.25.1/bin/go.exe\" build -o context-extender-nocgo.exe .)",
      "Bash(\".\\context-extender-nocgo.exe\" version)",
      "Bash(\".\\context-extender-nocgo.exe\" database status)"
    ],
    "deny": [],
    "ask": []
  }
}